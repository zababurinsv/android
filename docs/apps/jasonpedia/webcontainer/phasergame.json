{
  "+": "https://jasonette.github.io/Jasonpedia/webcontainer/template.json",
  "title": "Phaser.js Game",
  "theme": "rgba(0,0,0,0)",
  "html": "<!doctype html> <html> <head> <meta charset='UTF-8' /> <title>Phaser Example Runner</title> <meta name='viewport' content='initial-scale=1 maximum-scale=1 user-scalable=0 minimal-ui' /> <script src='http://hammerjs.github.io/dist/hammer.min.js'></script> <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js' type='text/javascript'></script> <script src='https://cdnjs.cloudflare.com/ajax/libs/phaser/2.6.2/phaser.min.js' type='text/javascript'></script> <script src='https://examples.phaser.io/_site/phaser/blob.js' type='text/javascript'></script> <script src='https://examples.phaser.io/_site/phaser/canvas-to-blob.js' type='text/javascript'></script> <script src='https://examples.phaser.io/_site/phaser/filesaver.js' type='text/javascript'></script> <script src='https://examples.phaser.io/_site/phaser/embed.js' type='text/javascript'></script> <style> html,body {width:100%;height:100%; margin: 0px; padding: 0px; font-family: Arial; font-size: 14px; background-color: #000000; color: #fff; } canvas {width: 100%, height: 100%;} </style> </head> <body> <div id='phaser-example'></div> <script type='text/javascript'> var IDE_HOOK = false; var VERSION = '2.6.2'; var d; var j; var game = new Phaser.Game(window.innerWidth, window.innerHeight, Phaser.CANVAS, 'phaser-example', { preload: preload, create: create, update: update, render: render }); function preload() { game.load.tilemap('level1', 'https://examples.phaser.io/assets/games/starstruck/level1.json', null, Phaser.Tilemap.TILED_JSON); game.load.image('tiles-1', 'https://examples.phaser.io/assets/games/starstruck/tiles-1.png'); game.load.spritesheet('dude', 'https://examples.phaser.io/assets/games/starstruck/dude.png', 32, 48); game.load.spritesheet('droid', 'https://examples.phaser.io/assets/games/starstruck/droid.png', 32, 32); game.load.image('starSmall', 'https://examples.phaser.io/assets/games/starstruck/star.png'); game.load.image('starBig', 'https://examples.phaser.io/assets/games/starstruck/star2.png'); game.load.image('background', 'https://examples.phaser.io/assets/games/starstruck/background2.png'); } var map; var tileset; var layer; var player; var facing = 'left'; var jumpTimer = 0; var cursors; var jumpButton; var bg; function create() { game.physics.startSystem(Phaser.Physics.ARCADE); game.stage.backgroundColor = '#000000'; bg = game.add.tileSprite(0, 0, 800, 600, 'background'); bg.fixedToCamera = true; map = game.add.tilemap('level1'); map.addTilesetImage('tiles-1'); map.setCollisionByExclusion([ 13, 14, 15, 16, 46, 47, 48, 49, 50, 51 ]); layer = map.createLayer('Tile Layer 1'); layer.resizeWorld(); game.physics.arcade.gravity.y = 1000; player = game.add.sprite(32, 32, 'dude'); game.physics.enable(player, Phaser.Physics.ARCADE); player.body.bounce.y = 0.2; player.body.collideWorldBounds = true; player.body.setSize(20, 32, 5, 16); player.animations.add('left', [0, 1, 2, 3], 10, true); player.animations.add('turn', [4], 20, true); player.animations.add('right', [5, 6, 7, 8], 10, true); game.camera.follow(player); cursors = game.input.keyboard.createCursorKeys(); jumpButton = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR); } function update() { game.physics.arcade.collide(player, layer); player.body.velocity.x = 0; if (d=='left' || cursors.left.isDown) { player.body.velocity.x = -150; if (facing != 'left') { player.animations.play('left'); facing = 'left'; } } else if (d=='right' || cursors.right.isDown) { player.body.velocity.x = 150; if (facing != 'right') { player.animations.play('right'); facing = 'right'; } } else { if (facing != 'idle') { player.animations.stop(); if (facing == 'left') { player.frame = 0; } else { player.frame = 5; } facing = 'idle'; } } if (j || jumpButton.isDown && player.body.onFloor() && game.time.now > jumpTimer) { player.body.velocity.y = -250; jumpTimer = game.time.now + 750; } } function render () { } function setDirection(dir){ d = dir; } function jump() { j = true; setTimeout(function(){j=false;}, 100); } function left () {setDirection('left');} function right () { setDirection('right'); } var h = new Hammer(document.body); h.on('swipeleft', function(){left();}); h.on('swiperight', function(){ right(); }); h.on('tap', function(){jump();}); </script> </body> </html>",
  "action": {
    "type": "$default"
  }
}
